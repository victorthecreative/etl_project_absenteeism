{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Contexto","text":"<p>Este projeto se trata de um processo de ETL (Extract, Transform e Load) para a \u00e1rea de Recursos Humanos (RH) da  Calin Carteira Digital . O objetivo principal \u00e9 gerenciar e analisar os dados relacionados ao absente\u00edsmo dos colaboradores. O processo de extra\u00e7\u00e3o, transforma\u00e7\u00e3o e carga dos dados \u00e9 fundamental para garantir a integridade e a qualidade das informa\u00e7\u00f5es utilizadas nas an\u00e1lises e tomadas de decis\u00e3o. Ao implementar esse fluxo de ETL, busca-se otimizar a gest\u00e3o de recursos humanos, identificar padr\u00f5es de aus\u00eancia, entender causas subjacentes e desenvolver estrat\u00e9gias eficazes para melhorar a produtividade e o bem-estar no ambiente de trabalho.</p>"},{"location":"#workflow","title":"Workflow","text":"<pre><code>flowchart LR\n    subgraph ETL [Pipeline]\n        A(Multiplos Arquivos Excel) --&gt; B[Extract: extract_from_excel]\n        B --&gt; C[Gera uma lista de Dataframes]\n        C --&gt; D[Transformation: concat_data_frames]\n        D --&gt; E[Gera um Dataframe consolidado]\n        E --&gt; F[Load: Converte para Excel]\n        F --&gt; G(Salva o consolidado em Excel)\n        G --&gt; H(Pasta Output: Um \u00fanico arquivo Excel)\n        style ETL align:center\n    end\n    style ETL width:800px\n    style ETL align:center</code></pre>"},{"location":"extract/","title":"Extract","text":"<p>Fun\u00e7\u00e3o para ler os arquivos de uma pasta data/input e retornar uma lista de dataframes</p> <p>args: input_path (str): caminho da pasta com os arquivos</p> <p>return:lista de dataframes</p> Source code in <code>app/pipe/extract.py</code> <pre><code>def extract_from_excel(input_path: str) -&gt; List[pd.DataFrame]:\n    \"\"\"\n    Fun\u00e7\u00e3o para ler os arquivos de uma pasta data/input\n    e retornar uma lista de dataframes\n\n    args: input_path (str): caminho da pasta com os arquivos\n\n    return:lista de dataframes\n    \"\"\"\n    file_path = glob.glob(os.path.join(input_path, '*.xlsx'))\n\n    data_frame_list = []\n    for file in file_path:\n        data_frame_list.append(pd.read_excel(file))\n\n    return data_frame_list\n</code></pre>"}]}